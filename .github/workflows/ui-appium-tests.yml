name: UI Automated Tests on MacOS

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    inputs:
      rust-version:
        type: string
        required: false
        default: nightly

jobs:
  build-and-test:
    runs-on: macos-latest
    steps:
      - name: Checkout working directory üîñ
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ inputs.rust-version }}
          override: true
          components: rustfmt, clippy

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Lint
        run: |
          cargo fmt --all -- --check
          cargo clippy -- -D warnings

      - name: Install cargo check tools
        run: |
          cargo install --locked cargo-deny || true
          cargo install --locked cargo-outdated || true
          cargo install --locked cargo-udeps || true
          cargo install --locked cargo-audit || true
          cargo install --locked cargo-pants || true

      - name: Check
        run: |
          cargo deny check
          cargo outdated --exit-code 1
          cargo udeps
          rm -rf ~/.cargo/advisory-db
          cargo audit
          cargo pants

      - name: Install Protobuf
        continue-on-error: true
        run: |
          brew update
          brew install protobuf

      - name: Make DMG üó≥Ô∏è
        run: make dmg

      - name: Copy DMG to Appium Apps Directory
        run: |
          cp -r ./target/release/macos/Uplink.app /Applications/

      - name: Setup Node.js üî®
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install NPM dependencies üì¶
        run: |
          cd appium-tests && npm install

      #- name: Install Uplink Desktop App
      #  run: |
      #    cd ./appium-tests/apps
      #    ls -la
      #    hdiutil attach ./appium-tests/apps/Uplink.dmg
      #    cp -r /Volumes/Uplink.dmg /Applications/
      #    hdiutil detach ./appium-tests/apps/Uplink.dmg

      - name: Install and Run Appium Server üì±
        run: |
          chmod +x ./appium-tests/scripts/run_appium_android_server.sh
          ./appium-tests/scripts/run_appium_macos_server.sh

      - name: Run WebdriverIO tests on MacOS
        run: npm run mac.ci

      - name: Upload Screenshots if tests failed üì∑
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-screenshots
          path: appium-tests/test-results/ios

      - name: Upload Appium Log if tests failed üì∑
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-log
          path: appium-tests/appium.log
